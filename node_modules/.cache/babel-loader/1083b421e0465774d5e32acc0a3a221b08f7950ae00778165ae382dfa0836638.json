{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAI ANH\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\react-todo\\\\src\\\\components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\n// import React, { useContext, useState } from 'react';\n// import { TodoContext } from '../context/TodoContext';\n\n// const Todo = ({ id, title, completed, showToastMessage }) => {\n//     const [todos, setTodos] = useContext(TodoContext);\n//     const [editing, setEditing] = useState(false); // Define editing state\n//     const [editTitle, setEditTitle] = useState(title); // Define editTitle state\n//     const [showEditToast, setShowEditToast] = useState(false); // State for edit toast\n//     const [showDeleteToast, setShowDeleteToast] = useState(false);\n\n//     const completeTodo = (e) => {\n//         const updatedTodos = todos.map((item) => {\n//             if (item.id === id) {\n//                 item.completed = e.target.checked;\n//             }\n//             return item;\n//         });\n//         setTodos(updatedTodos);\n//     };\n\n//     const deleteTodo = (e) => {\n//         e.preventDefault();\n//         const updatedTodos = todos.filter((item) => item.id !== id);\n//         setTodos(updatedTodos);\n//         showToastMessage('Deleted successfully!');\n//     };\n\n//     const handleEdit = () => {\n//         setEditing(true); // Set editing state to true when edit icon is clicked\n//     };\n\n//     const handleEditChange = (e) => {\n//         setEditTitle(e.target.value);\n//     };\n\n//     const handleEditSubmit = (e) => {\n//         e.preventDefault();\n//         const updatedTodos = todos.map((item) => {\n//             if (item.id === id) {\n//                 item.title = editTitle;\n//             }\n//             return item;\n//         });\n//         setTodos(updatedTodos);\n//         setEditing(false); // Set editing state to false after editing is submitted\n//         showToastMessage('Edited successfully!'); // Show toast message after editing\n//     };\n\n//     const editTodo = (e) => {\n//         e.preventDefault();\n//         handleEdit(); // Start editing mode\n//         showToastMessage('Editing mode activated!');\n//     };\n\n//     return (\n//             <li>\n//                 <div className=\"todoapp_todo\">\n//                     <div className=\"todoapp_todos_left\">\n//                         <input\n//                             type=\"checkbox\"\n//                             id={id}\n//                             className=\"todoapp_todos_left-checkbox\"\n//                             checked={completed}\n//                             onChange={completeTodo}\n//                         />\n//                         {editing ? (\n//                             <input\n//                                 type=\"text\"\n//                                 value={editTitle}\n//                                 onChange={handleEditChange}\n//                                 onBlur={handleEditSubmit}\n//                             />\n//                         ) : (\n//                             <div className=\"todoapp_todos_left-text\">{title}</div>\n//                         )}\n//                     </div>\n//                     <div className=\"todoapp_todos_right\">\n//                         <i className=\"fas fa-edit todoapp_todos_right-iconedit\" onClick={editTodo}></i> {/* Add onClick event for editing */}\n//                         <i className=\"fas fa-times todoapp_todos_right-icondelete\" onClick={deleteTodo}></i> {/* Fix class attribute */}\n//                     </div>\n//                 </div>\n//                 {/* Edit toast */}\n//                 {showEditToast && (\n//                     <div className=\"container\">\n//                         <div className=\"message\">\n//                             <i className=\"fas fa-check-circle message_icon\"></i>\n//                             <div className=\"message_text\">Editing mode activated!</div>\n//                         </div>\n//                         <div className=\"coutdown\"></div>\n//                     </div>\n//                 )}\n//                 {/* Delete toast */}\n//                 {showDeleteToast && (\n//                     <div className=\"container\">\n//                         <div className=\"message\">\n//                             <i className=\"fas fa-check-circle message_icon\"></i>\n//                             <div className=\"message_text\">Deleted successfully!</div>\n//                         </div>\n//                         <div className=\"coutdown\"></div>\n//                     </div>\n//                 )}\n//             </li>\n//     );\n// };\n\n// export default Todo;\n\n// import React, { useContext, useState } from 'react';\n// import { TodoContext } from '../context/TodoContext';\n// import Toast from './Toast'; // Import component Toast\n\n// const Todo = ({ id, title, completed, showToastMessage }) => {\n//     const [todos, setTodos] = useContext(TodoContext);\n//     const [editing, setEditing] = useState(false); // Define editing state\n//     const [editTitle, setEditTitle] = useState(title); // Define editTitle state\n//     const [showToast, setShowToast] = useState(false); // State for toast\n//     const [toastMessage, setToastMessage] = useState(''); // Message for toast\n\n//     const completeTodo = (e) => {\n//         const updatedTodos = todos.map((item) => {\n//             if (item.id === id) {\n//                 item.completed = e.target.checked;\n//             }\n//             return item;\n//         });\n//         setTodos(updatedTodos);\n//     };\n\n//     const deleteTodo = (e) => {\n//         e.preventDefault();\n//         const updatedTodos = todos.filter((item) => item.id !== id);\n//         setTodos(updatedTodos);\n//         setToastMessage('Deleted successfully!'); // Set toast message\n//         setShowToast(true); // Show toast\n//     };\n\n//     const handleEdit = () => {\n//         setEditing(true); // Set editing state to true when edit icon is clicked\n//     };\n\n//     const handleEditChange = (e) => {\n//         setEditTitle(e.target.value);\n//     };\n\n//     const handleEditSubmit = (e) => {\n//         e.preventDefault();\n//         const updatedTodos = todos.map((item) => {\n//             if (item.id === id) {\n//                 item.title = editTitle;\n//             }\n//             return item;\n//         });\n//         setTodos(updatedTodos);\n//         setEditing(false); // Set editing state to false after editing is submitted\n//         setToastMessage('Edited successfully!'); // Set toast message\n//         setShowToast(true); // Show toast\n//     };\n\n//     const editTodo = (e) => {\n//         e.preventDefault();\n//         handleEdit(); // Start editing mode\n//         setToastMessage('Editing mode activated!'); // Set toast message\n//         setShowToast(true); // Show toast\n//     };\n\n//     return (\n//             <li>\n//                 <div className=\"todoapp_todo\">\n//                     <div className=\"todoapp_todos_left\">\n//                         <input\n//                             type=\"checkbox\"\n//                             id={id}\n//                             className=\"todoapp_todos_left-checkbox\"\n//                             checked={completed}\n//                             onChange={completeTodo}\n//                         />\n//                         {editing ? (\n//                             <input\n//                                 type=\"text\"\n//                                 value={editTitle}\n//                                 onChange={handleEditChange}\n//                                 onBlur={handleEditSubmit}\n//                             />\n//                         ) : (\n//                             <div className=\"todoapp_todos_left-text\">{title}</div>\n//                         )}\n//                     </div>\n//                     <div className=\"todoapp_todos_right\">\n//                         <i className=\"fas fa-edit todoapp_todos_right-iconedit\" onClick={editTodo}></i>\n//                         <i className=\"fas fa-times todoapp_todos_right-icondelete\" onClick={deleteTodo}></i>\n//                     </div>\n//                 </div>\n//                 {/* Toast */}\n//                 <Toast message={toastMessage} show={showToast} />\n//             </li>\n//     );\n// };\n\n// export default Todo;\n\nimport React, { useContext, useState } from 'react';\nimport { TodoContext } from '../context/TodoContext';\nimport Toast from './Toast'; // Import component Toast\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  id,\n  title,\n  completed,\n  showToastMessage\n}) => {\n  _s();\n  const [todos, setTodos] = useContext(TodoContext);\n  const [editing, setEditing] = useState(false); // Define editing state\n  const [editTitle, setEditTitle] = useState(title); // Define editTitle state\n  const [showEditToast, setShowEditToast] = useState(false); // State for edit toast\n  const [showDeleteToast, setShowDeleteToast] = useState(false); // State for delete toast\n  const [toastMessage, setToastMessage] = useState(''); // Message for toast\n\n  const completeTodo = e => {\n    const updatedTodos = todos.map(item => {\n      if (item.id === id) {\n        item.completed = e.target.checked;\n      }\n      return item;\n    });\n    setTodos(updatedTodos);\n  };\n  const deleteTodo = e => {\n    e.preventDefault();\n    const updatedTodos = todos.filter(item => item.id !== id);\n    setTodos(updatedTodos);\n    setToastMessage('Deleted successfully!'); // Set toast message\n    setShowDeleteToast(true); // Show delete toast\n  };\n  const handleEdit = () => {\n    setEditing(true); // Set editing state to true when edit icon is clicked\n  };\n  const handleEditChange = e => {\n    setEditTitle(e.target.value);\n  };\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    const updatedTodos = todos.map(item => {\n      if (item.id === id) {\n        item.title = editTitle;\n      }\n      return item;\n    });\n    setTodos(updatedTodos);\n    setEditing(false); // Set editing state to false after editing is submitted\n    setToastMessage('Edited successfully!'); // Set toast message\n    setShowEditToast(true); // Show edit toast\n  };\n  const editTodo = e => {\n    e.preventDefault();\n    handleEdit(); // Start editing mode\n    setToastMessage('Editing mode activated!'); // Set toast message\n    setShowEditToast(true); // Show edit toast\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp_todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoapp_todos_left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: id,\n          className: \"todoapp_todos_left-checkbox\",\n          checked: completed,\n          onChange: completeTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this), editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editTitle,\n          onChange: handleEditChange,\n          onBlur: handleEditSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoapp_todos_left-text\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoapp_todos_right\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-edit todoapp_todos_right-iconedit\",\n          onClick: editTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times todoapp_todos_right-icondelete\",\n          onClick: deleteTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }, this), (showEditToast || showDeleteToast) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check-circle message_icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message_text\",\n          children: toastMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coutdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 13\n  }, this);\n};\n_s(Todo, \"MX08V3BwCD7NcVn4GTDESwhGDM0=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useContext","useState","TodoContext","Toast","jsxDEV","_jsxDEV","Todo","id","title","completed","showToastMessage","_s","todos","setTodos","editing","setEditing","editTitle","setEditTitle","showEditToast","setShowEditToast","showDeleteToast","setShowDeleteToast","toastMessage","setToastMessage","completeTodo","e","updatedTodos","map","item","target","checked","deleteTodo","preventDefault","filter","handleEdit","handleEditChange","value","handleEditSubmit","editTodo","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onBlur","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MAI ANH/OneDrive/Máy tính/react-todo/src/components/Todo.jsx"],"sourcesContent":["// import React, { useContext, useState } from 'react';\r\n// import { TodoContext } from '../context/TodoContext';\r\n\r\n// const Todo = ({ id, title, completed, showToastMessage }) => {\r\n//     const [todos, setTodos] = useContext(TodoContext);\r\n//     const [editing, setEditing] = useState(false); // Define editing state\r\n//     const [editTitle, setEditTitle] = useState(title); // Define editTitle state\r\n//     const [showEditToast, setShowEditToast] = useState(false); // State for edit toast\r\n//     const [showDeleteToast, setShowDeleteToast] = useState(false);\r\n\r\n//     const completeTodo = (e) => {\r\n//         const updatedTodos = todos.map((item) => {\r\n//             if (item.id === id) {\r\n//                 item.completed = e.target.checked;\r\n//             }\r\n//             return item;\r\n//         });\r\n//         setTodos(updatedTodos);\r\n//     };\r\n\r\n//     const deleteTodo = (e) => {\r\n//         e.preventDefault();\r\n//         const updatedTodos = todos.filter((item) => item.id !== id);\r\n//         setTodos(updatedTodos);\r\n//         showToastMessage('Deleted successfully!');\r\n//     };\r\n\r\n//     const handleEdit = () => {\r\n//         setEditing(true); // Set editing state to true when edit icon is clicked\r\n//     };\r\n\r\n//     const handleEditChange = (e) => {\r\n//         setEditTitle(e.target.value);\r\n//     };\r\n\r\n//     const handleEditSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const updatedTodos = todos.map((item) => {\r\n//             if (item.id === id) {\r\n//                 item.title = editTitle;\r\n//             }\r\n//             return item;\r\n//         });\r\n//         setTodos(updatedTodos);\r\n//         setEditing(false); // Set editing state to false after editing is submitted\r\n//         showToastMessage('Edited successfully!'); // Show toast message after editing\r\n//     };\r\n    \r\n//     const editTodo = (e) => {\r\n//         e.preventDefault();\r\n//         handleEdit(); // Start editing mode\r\n//         showToastMessage('Editing mode activated!');\r\n//     };\r\n    \r\n\r\n//     return (\r\n//             <li>\r\n//                 <div className=\"todoapp_todo\">\r\n//                     <div className=\"todoapp_todos_left\">\r\n//                         <input\r\n//                             type=\"checkbox\"\r\n//                             id={id}\r\n//                             className=\"todoapp_todos_left-checkbox\"\r\n//                             checked={completed}\r\n//                             onChange={completeTodo}\r\n//                         />\r\n//                         {editing ? (\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 value={editTitle}\r\n//                                 onChange={handleEditChange}\r\n//                                 onBlur={handleEditSubmit}\r\n//                             />\r\n//                         ) : (\r\n//                             <div className=\"todoapp_todos_left-text\">{title}</div>\r\n//                         )}\r\n//                     </div>\r\n//                     <div className=\"todoapp_todos_right\">\r\n//                         <i className=\"fas fa-edit todoapp_todos_right-iconedit\" onClick={editTodo}></i> {/* Add onClick event for editing */}\r\n//                         <i className=\"fas fa-times todoapp_todos_right-icondelete\" onClick={deleteTodo}></i> {/* Fix class attribute */}\r\n//                     </div>\r\n//                 </div>\r\n//                 {/* Edit toast */}\r\n//                 {showEditToast && (\r\n//                     <div className=\"container\">\r\n//                         <div className=\"message\">\r\n//                             <i className=\"fas fa-check-circle message_icon\"></i>\r\n//                             <div className=\"message_text\">Editing mode activated!</div>\r\n//                         </div>\r\n//                         <div className=\"coutdown\"></div>\r\n//                     </div>\r\n//                 )}\r\n//                 {/* Delete toast */}\r\n//                 {showDeleteToast && (\r\n//                     <div className=\"container\">\r\n//                         <div className=\"message\">\r\n//                             <i className=\"fas fa-check-circle message_icon\"></i>\r\n//                             <div className=\"message_text\">Deleted successfully!</div>\r\n//                         </div>\r\n//                         <div className=\"coutdown\"></div>\r\n//                     </div>\r\n//                 )}\r\n//             </li>\r\n//     );\r\n// };\r\n\r\n// export default Todo;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useContext, useState } from 'react';\r\n// import { TodoContext } from '../context/TodoContext';\r\n// import Toast from './Toast'; // Import component Toast\r\n\r\n// const Todo = ({ id, title, completed, showToastMessage }) => {\r\n//     const [todos, setTodos] = useContext(TodoContext);\r\n//     const [editing, setEditing] = useState(false); // Define editing state\r\n//     const [editTitle, setEditTitle] = useState(title); // Define editTitle state\r\n//     const [showToast, setShowToast] = useState(false); // State for toast\r\n//     const [toastMessage, setToastMessage] = useState(''); // Message for toast\r\n\r\n//     const completeTodo = (e) => {\r\n//         const updatedTodos = todos.map((item) => {\r\n//             if (item.id === id) {\r\n//                 item.completed = e.target.checked;\r\n//             }\r\n//             return item;\r\n//         });\r\n//         setTodos(updatedTodos);\r\n//     };\r\n\r\n//     const deleteTodo = (e) => {\r\n//         e.preventDefault();\r\n//         const updatedTodos = todos.filter((item) => item.id !== id);\r\n//         setTodos(updatedTodos);\r\n//         setToastMessage('Deleted successfully!'); // Set toast message\r\n//         setShowToast(true); // Show toast\r\n//     };\r\n\r\n//     const handleEdit = () => {\r\n//         setEditing(true); // Set editing state to true when edit icon is clicked\r\n//     };\r\n\r\n//     const handleEditChange = (e) => {\r\n//         setEditTitle(e.target.value);\r\n//     };\r\n\r\n//     const handleEditSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const updatedTodos = todos.map((item) => {\r\n//             if (item.id === id) {\r\n//                 item.title = editTitle;\r\n//             }\r\n//             return item;\r\n//         });\r\n//         setTodos(updatedTodos);\r\n//         setEditing(false); // Set editing state to false after editing is submitted\r\n//         setToastMessage('Edited successfully!'); // Set toast message\r\n//         setShowToast(true); // Show toast\r\n//     };\r\n    \r\n//     const editTodo = (e) => {\r\n//         e.preventDefault();\r\n//         handleEdit(); // Start editing mode\r\n//         setToastMessage('Editing mode activated!'); // Set toast message\r\n//         setShowToast(true); // Show toast\r\n//     };\r\n    \r\n//     return (\r\n//             <li>\r\n//                 <div className=\"todoapp_todo\">\r\n//                     <div className=\"todoapp_todos_left\">\r\n//                         <input\r\n//                             type=\"checkbox\"\r\n//                             id={id}\r\n//                             className=\"todoapp_todos_left-checkbox\"\r\n//                             checked={completed}\r\n//                             onChange={completeTodo}\r\n//                         />\r\n//                         {editing ? (\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 value={editTitle}\r\n//                                 onChange={handleEditChange}\r\n//                                 onBlur={handleEditSubmit}\r\n//                             />\r\n//                         ) : (\r\n//                             <div className=\"todoapp_todos_left-text\">{title}</div>\r\n//                         )}\r\n//                     </div>\r\n//                     <div className=\"todoapp_todos_right\">\r\n//                         <i className=\"fas fa-edit todoapp_todos_right-iconedit\" onClick={editTodo}></i>\r\n//                         <i className=\"fas fa-times todoapp_todos_right-icondelete\" onClick={deleteTodo}></i>\r\n//                     </div>\r\n//                 </div>\r\n//                 {/* Toast */}\r\n//                 <Toast message={toastMessage} show={showToast} />\r\n//             </li>\r\n//     );\r\n// };\r\n\r\n// export default Todo;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useContext, useState } from 'react';\r\nimport { TodoContext } from '../context/TodoContext';\r\nimport Toast from './Toast'; // Import component Toast\r\n\r\nconst Todo = ({ id, title, completed, showToastMessage }) => {\r\n    const [todos, setTodos] = useContext(TodoContext);\r\n    const [editing, setEditing] = useState(false); // Define editing state\r\n    const [editTitle, setEditTitle] = useState(title); // Define editTitle state\r\n    const [showEditToast, setShowEditToast] = useState(false); // State for edit toast\r\n    const [showDeleteToast, setShowDeleteToast] = useState(false); // State for delete toast\r\n    const [toastMessage, setToastMessage] = useState(''); // Message for toast\r\n\r\n    const completeTodo = (e) => {\r\n        const updatedTodos = todos.map((item) => {\r\n            if (item.id === id) {\r\n                item.completed = e.target.checked;\r\n            }\r\n            return item;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const deleteTodo = (e) => {\r\n        e.preventDefault();\r\n        const updatedTodos = todos.filter((item) => item.id !== id);\r\n        setTodos(updatedTodos);\r\n        setToastMessage('Deleted successfully!'); // Set toast message\r\n        setShowDeleteToast(true); // Show delete toast\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        setEditing(true); // Set editing state to true when edit icon is clicked\r\n    };\r\n\r\n    const handleEditChange = (e) => {\r\n        setEditTitle(e.target.value);\r\n    };\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n        const updatedTodos = todos.map((item) => {\r\n            if (item.id === id) {\r\n                item.title = editTitle;\r\n            }\r\n            return item;\r\n        });\r\n        setTodos(updatedTodos);\r\n        setEditing(false); // Set editing state to false after editing is submitted\r\n        setToastMessage('Edited successfully!'); // Set toast message\r\n        setShowEditToast(true); // Show edit toast\r\n    };\r\n    \r\n    const editTodo = (e) => {\r\n        e.preventDefault();\r\n        handleEdit(); // Start editing mode\r\n        setToastMessage('Editing mode activated!'); // Set toast message\r\n        setShowEditToast(true); // Show edit toast\r\n    };\r\n    \r\n    return (\r\n            <li>\r\n                <div className=\"todoapp_todo\">\r\n                    <div className=\"todoapp_todos_left\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id={id}\r\n                            className=\"todoapp_todos_left-checkbox\"\r\n                            checked={completed}\r\n                            onChange={completeTodo}\r\n                        />\r\n                        {editing ? (\r\n                            <input\r\n                                type=\"text\"\r\n                                value={editTitle}\r\n                                onChange={handleEditChange}\r\n                                onBlur={handleEditSubmit}\r\n                            />\r\n                        ) : (\r\n                            <div className=\"todoapp_todos_left-text\">{title}</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"todoapp_todos_right\">\r\n                        <i className=\"fas fa-edit todoapp_todos_right-iconedit\" onClick={editTodo}></i>\r\n                        <i className=\"fas fa-times todoapp_todos_right-icondelete\" onClick={deleteTodo}></i>\r\n                    </div>\r\n                </div>\r\n                {/* Toast */}\r\n                {(showEditToast || showDeleteToast) && (\r\n                    <div className=\"container\">\r\n                        <div className=\"message\">\r\n                            <i className=\"fas fa-check-circle message_icon\"></i>\r\n                            <div className=\"message_text\">{toastMessage}</div>\r\n                        </div>\r\n                        <div className=\"coutdown\"></div>\r\n                    </div>\r\n                )}\r\n            </li>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,SAAS;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,UAAU,CAACE,WAAW,CAAC;EACjD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAMuB,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAMC,YAAY,GAAGd,KAAK,CAACe,GAAG,CAAEC,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACrB,EAAE,KAAKA,EAAE,EAAE;QAChBqB,IAAI,CAACnB,SAAS,GAAGgB,CAAC,CAACI,MAAM,CAACC,OAAO;MACrC;MACA,OAAOF,IAAI;IACf,CAAC,CAAC;IACFf,QAAQ,CAACa,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMK,UAAU,GAAIN,CAAC,IAAK;IACtBA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,MAAMN,YAAY,GAAGd,KAAK,CAACqB,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKA,EAAE,CAAC;IAC3DM,QAAQ,CAACa,YAAY,CAAC;IACtBH,eAAe,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC1CF,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACrBnB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMoB,gBAAgB,GAAIV,CAAC,IAAK;IAC5BR,YAAY,CAACQ,CAAC,CAACI,MAAM,CAACO,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,gBAAgB,GAAIZ,CAAC,IAAK;IAC5BA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,MAAMN,YAAY,GAAGd,KAAK,CAACe,GAAG,CAAEC,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACrB,EAAE,KAAKA,EAAE,EAAE;QAChBqB,IAAI,CAACpB,KAAK,GAAGQ,SAAS;MAC1B;MACA,OAAOY,IAAI;IACf,CAAC,CAAC;IACFf,QAAQ,CAACa,YAAY,CAAC;IACtBX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACnBQ,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACzCJ,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMmB,QAAQ,GAAIb,CAAC,IAAK;IACpBA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClBE,UAAU,CAAC,CAAC,CAAC,CAAC;IACdX,eAAe,CAAC,yBAAyB,CAAC,CAAC,CAAC;IAC5CJ,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACQd,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAKmC,SAAS,EAAC,cAAc;MAAAD,QAAA,gBACzBlC,OAAA;QAAKmC,SAAS,EAAC,oBAAoB;QAAAD,QAAA,gBAC/BlC,OAAA;UACIoC,IAAI,EAAC,UAAU;UACflC,EAAE,EAAEA,EAAG;UACPiC,SAAS,EAAC,6BAA6B;UACvCV,OAAO,EAAErB,SAAU;UACnBiC,QAAQ,EAAElB;QAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,EACDhC,OAAO,gBACJT,OAAA;UACIoC,IAAI,EAAC,MAAM;UACXL,KAAK,EAAEpB,SAAU;UACjB0B,QAAQ,EAAEP,gBAAiB;UAC3BY,MAAM,EAAEV;QAAiB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,gBAEFzC,OAAA;UAAKmC,SAAS,EAAC,yBAAyB;UAAAD,QAAA,EAAE/B;QAAK;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACxD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNzC,OAAA;QAAKmC,SAAS,EAAC,qBAAqB;QAAAD,QAAA,gBAChClC,OAAA;UAAGmC,SAAS,EAAC,0CAA0C;UAACQ,OAAO,EAAEV;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/EzC,OAAA;UAAGmC,SAAS,EAAC,6CAA6C;UAACQ,OAAO,EAAEjB;QAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAEL,CAAC5B,aAAa,IAAIE,eAAe,kBAC9Bf,OAAA;MAAKmC,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBlC,OAAA;QAAKmC,SAAS,EAAC,SAAS;QAAAD,QAAA,gBACpBlC,OAAA;UAAGmC,SAAS,EAAC;QAAkC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDzC,OAAA;UAAKmC,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAEjB;QAAY;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACNzC,OAAA;QAAKmC,SAAS,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEjB,CAAC;AAACnC,EAAA,CA9FIL,IAAI;AAAA2C,EAAA,GAAJ3C,IAAI;AAgGV,eAAeA,IAAI;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}